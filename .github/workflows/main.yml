name: main

defaults:
  run:
    shell: bash

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 13 * * 4'
  release:
    types: [published]

jobs:
  pylint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: mpi4py/setup-mpi@v1
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint==2.14.5 pytest
        python setup.py egg_info
        pip install -r *.egg-info/requires.txt
    - name: Analysing the code with pylint
      run: |
        pylint --unsafe-load-any-extension=y --disable=fixme $(git ls-files '*.py')

  precommit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.10" 
      - name: Linting
        run: |
          pip install pre-commit
          pre-commit clean
          pre-commit autoupdate
          pre-commit run --all-files

  pdoc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - uses: mpi4py/setup-mpi@v1
      - name: Build
        run: |
          pip install pdoc3
          pip install -e .
          python -We -m pdoc --html numba_mpi
      - name: Deploy
        if: github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@4.1.1
        with:
          BRANCH: pdoc
          FOLDER: html/numba_mpi
          CLEAN: true

  zenodo_json:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: notiz-dev/github-action-json-property@release
        with: 
          path: '.zenodo.json'
          prop_path: 'creators'

  build:
    needs: [pylint, precommit, pdoc, zenodo_json]
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        mpi: [ 'mpich', 'openmpi', 'msmpi', 'intelmpi']
        exclude:
        - platform: macos-latest
          mpi: msmpi
        - platform: macos-latest
          mpi: intelmpi
        - platform: ubuntu-latest
          mpi: msmpi
        - platform: windows-latest
          mpi: mpich
        - platform: windows-latest
          mpi: openmpi
        - platform: windows-latest
          mpi: intelmpi
          
        # https://github.com/atmos-cloud-sim-uj/numba-mpi/issues/69
        - platform: ubuntu-latest
          python-version: 3.7
          mpi: mpich
        - platform: ubuntu-latest
          python-version: 3.8
          mpi: mpich
        - platform: ubuntu-latest
          python-version: 3.9
          mpi: mpich
          
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - uses: mpi4py/setup-mpi@v1
        with:
          mpi: ${{ matrix.mpi }}
      - run: pip install -e .
      - run: pip install pytest
      - run: python -We -c "import mpi4py"
      - run: python -We -c "import numba_mpi"
      - run: mpiexec -n 2 pytest -p no:unraisableexception -We

  dist:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: mpi4py/setup-mpi@v1
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # https://github.com/pypa/setuptools_scm/issues/480
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - run: pip install twine build

      - run: |
          unset CI
          python -m build 2>&1 | tee build.log
          exit `fgrep -i warning build.log | wc -l`

      - run: twine check --strict dist/*

      - run: |
          python setup.py egg_info
          pip install -r *.egg-info/requires.txt
          pip install --no-index --find-links file:./dist numba-mpi
          cd /tmp  # make sure local files are not picked up
          python -We -c "import numba_mpi"

      - if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: pypa/gh-action-pypi-publish@unstable/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@unstable/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
